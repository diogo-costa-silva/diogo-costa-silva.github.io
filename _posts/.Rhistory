dbinom(2, 100, 0.03)
rpois(100, 2)
dpois(100, 2)
dpois(x = 100, lambda = 2)
dbinom(2, 100, 0.03)
dpois(x = 100, lambda = 2)
dpois(2, 100)
dpois(2, 2)
lambda = 0.03*100
dpois(2, lambda)
lambda
y_bin
u = rnorm(n)
u
u = ntile(rnorm(n), n = 10)
u
y = u*1
y = u*0.5
y
y_prob = plogis(y)
y_bin = rbinom(n, 1, prob = y_prob)
glm(y_bin ~ u, family = "binomial")
#
n = 100
u = as.factor(ntile(rnorm(n), n = 10))
y = u*0.5
y_prob = plogis(y)
y_bin = rbinom(n, 1, prob = y_prob)
u
#
n = 100
u = ntile(rnorm(n), n = 10)
y = u*0.5
y_prob = plogis(y)
y_bin = rbinom(n, 1, prob = y_prob)
uf = factor(u)
glm(y_bin ~ uf, family = "binomial")
#
n = 100
u = rbinom(n, 1, 0.2)
y = u*2 + rnorm(n, 0, 0.5)
y_prob = plogis(y)
y_bin = rbinom(n, 1, prob = y_prob)
glm(y_bin ~ u, family = "binomial")
#
df_poiss = data.frame(table(u, y_bin))
df_poiss
#
glm(Freq ~ y_bin*u, data = df_poiss, family = "poisson")
#
hist(rpois(n, lambda = 2))
y_prob
#
n*y_prob
y_bin
#
n*y_prob
#
y_bin
#
rpois(n, n*y_prob)
#
rx1 = rpois(n, n*y_prob)
hsit(rx1)
hsit(rx1)
hist(rx1)
y_bin
n*y_prob
dbinom(0:2, 2, prob = 0.5)
dbinom(0:3, 2, prob = 0.5)
#
glm(Freq ~ y_bin*u, data = df_poiss, family = "poisson")
#
glm(Freq ~ y_bin*u, data = df_poiss, family = "poisson")
glm(y_bin ~ u, family = "binomial")
dbinom(0:3, 2, prob = 0.5)
dbinom(0:3, 2, prob = 0.5)
dpois(0:3, lambda = 2*0.5)
#
dbinom(0:3, size = 2, prob = 0.5)
dpois(0:3, lambda = 2*0.5)
#
dbinom(0:3, size = 20, prob = 0.5)
y_bin
table(y_bin)
table(u, y_bin)
data.frame(table(u, y_bin))
#
dbinom(46, size = 100, prob = 0.5)
dpois(46, lambda = 10*0.5)
#
dbinom(46, size = 100, prob = 0.5)
dpois(46, lambda = 10*0.5)
dpois(46, lambda = 100*0.5)
#
dbinom(46, size = 100, prob = 0.5)
dpois(46, lambda = 100*0.5)
y_prob
n*y_prob
rpois(n*y_prob)
rpois(n, n*y_prob)
y
n*y_prob
#
data.frame(table(u, y_bin))
#
data.frame(table(u, y_bin)) %>% mutate(Freq/sum(Freq))
0.16 / 0.46
log(0.3478261)
#
n = 100
u = rbinom(n, 1, 0.2)
y = u*2 + rnorm(n, 0, 0.5)
#
y_prob = plogis(y)
y_bin = rbinom(n, 1, prob = y_prob)
#
#
data.frame(table(u, y_bin)) %>% mutate(Freq/sum(Freq))
#
rpois(n, n*y_prob)
#
#
#
dbinom(46, size = 100, prob = 0.5)
dpois(46, lambda = 100*0.5)
#
#
rx1 = rpois(n, n*y_prob)
hist(rx1)
#
#
y_bin
#
#
glm(y_bin ~ u, family = "binomial")
#
#
df_poiss = data.frame(table(u, y_bin))
df_poiss
#
glm(Freq ~ y_bin*u, data = df_poiss, family = "poisson")
glm(y_bin ~ u, family = "binomial")
#
#
rpois(n, n*y_prob)
glm(y_bin ~ u, family = "binomial")
#
data.frame(table(u, y_bin)) %>% mutate(Freq/sum(Freq))
#
data.frame(table(u, y_bin)) %>% mutate(Freq/sum(Freq)) %>% mutate(slice(4))
#
data.frame(table(u, y_bin)) %>% mutate(Freq/sum(Freq))
#
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq))
#
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq)) %>% slice(p)
#
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq)) %>% slice(4)
#
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq))
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq)) %>% slice(4,2)
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq)) %>% slice(1,4)
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq)) %>% mutate(p[4]/p[1])
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq)) %>% mutate(p[1]/p[4])
#
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq))
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq)) %>% mutate(p[1]/p[4])
glm(y_bin ~ u, family = "binomial")
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq)) %>% mutate(log(p[1]/p[4]))
glm(y_bin ~ u, family = "binomial")
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq)) %>% mutate(log(p[4]/p[1]))
glm(y_bin ~ u, family = "binomial")
#
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq))
0.17/0.32
17/3
17/32
log(0.53125)
glm(y_bin ~ u, family = "binomial")
#
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq))
#
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq))
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq)) %>% mutate(p[4]/p[1])
17/32
log(17/32)
glm(y_bin ~ u, family = "binomial")
#
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq))
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq)) %>% mutate((p[4]/p[1])/(p[3]/p[2]))
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq)) %>% mutate(log((p[4]/p[1])/(p[3]/p[2])))
(17/47)/(4/32)
log((17/47)/(4/32))
glm(y_bin ~ u, family = "binomial")
log((17/47)/(4/32))
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq)) %>% mutate(log((p[4]/p[3])/(p[2]/p[1])))
#
glm(y_bin ~ u, family = "binomial")
#
glm(y_bin ~ u, family = "binomial")
#
glm(y_bin ~ u, family = "binomial")
#
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq))
#
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq))
#
dbinom(46, size = 100, prob = 0.5)
dpois(46, lambda = 100*0.5)
#
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq))
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq)) %>% mutate(log((p[4]/p[3])/(p[2]/p[1])))
#
n = 100
y = rnorm(n, 0, 0.5)
#
y_prob = plogis(y)
y_bin = rbinom(n, 1, prob = y_prob)
y_bin
y_bin = rbinom(n, 1, prob = 0.2)
y_bin
table(y_bin)
dpois(n, 18)
#
dpois(x = 1, lambda = 0.2*100)
#
glm(y_bin ~ 1, family = "binomial")
#
dpois(x = 1, lambda = 0.2*100)
table(y_bin)
as.data.frame(table(y_bin))
df_freq = as.data.frame(table(y_bin))
#
glm(y_bin ~ 1, data = df_freq, family = "poisson")
#
glm(Freq ~ y_bin, data = df_freq, family = "poisson")
#
glm(y_bin ~ 1, family = "binomial")
#
glm(Freq ~ y_bin, data = df_freq, family = "poisson")
#
dpois(x = 1, lambda = 0.2*100)
0.2*100
rpois(n, 18)
y_bin
n
rpois(1, 18)
rpois(20, 18)
rpois(20, 1)
rpois(20, 1)
rpois(20, 0.2)
rpois(200, 0.2)
y_bin
#
dbinom(1, 1, 0.2)
dpois(x = 1, lambda = 0.2*100)
df_freq
#
dbinom(x = 18, size = 100, 0.2)
dpois(x = 18, lambda = 0.2*100)
#
dbinom(x = 18, size = 100, 0.2)
dpois(x = 18, lambda = 0.2*100)
#
glm(Freq ~ y_bin, data = df_freq, family = "poisson")
#
df_freq = as.data.frame(table(y_bin))
df_freq
#
glm(y_bin ~ 1, family = "binomial")
#
glm(Freq ~ y_bin, data = df_freq, family = "poisson")
#
glm(y_bin ~ 1, family = "binomial") %>% summary()
#
glm(Freq ~ y_bin, data = df_freq, family = "poisson") %>% summary()
# approx #
dbinom(x = 18, size = 100, 0.2)
dpois(x = 18, lambda = 0.2*100)
# approx #
dbinom(x = 40, size = 100, 0.2)
dpois(x = 40, lambda = 0.2*100)
# approx #
dbinom(x = 20, size = 100, 0.2)
dpois(x = 20, lambda = 0.2*100)
#
n = 100
y = rnorm(n, 0, 0.5)
#
y_prob = plogis(y)
y_bin = rbinom(n, 1, prob = 0.2)
#
df_freq = as.data.frame(table(y_bin))
df_freq
#
glm(y_bin ~ 1, family = "binomial") %>% summary()
glm(Freq ~ y_bin, data = df_freq, family = "poisson") %>% summary()
rpois(200, 0.2)
# approx #
rbinom(x = 20, size = 100, 0.2)
# approx #
rbinom(n = 100, size = 1, 0.2)
rpois(n = 100, lambda = 0.2*100)
# approx #
rbinom(n = 100, size = 1, prob = 0.2)
rpois(n = 100, lambda = 0.2*100)
# approx #
table(rbinom(n = 100, size = 1, prob = 0.2))
rpois(n = 100, lambda = 0.2*100)
# approx #
table(rbinom(n = 100, size = 1, prob = 0.2))
# = #
rpois(n = 100, lambda = 0.2*100)
#
n = 100
# approx #
table(rbinom(n = 100, size = 1, prob = 0.2))
# = #
rpois(n = 100, lambda = 0.2*100)
#
glm(y_bin ~ 1, family = "binomial") %>% summary()
glm(Freq ~ y_bin, data = df_freq, family = "poisson") %>% summary()
predict(glm(y_bin ~ 1, family = "binomial"))
predict(glm(y_bin ~ ., family = "binomial"))
predict(glm(y_bin ~ 1, family = "binomial"))
glm(Freq ~ y_bin, data = df_freq, family = "poisson")
#
predict(glm(y_bin ~ 1, family = "binomial"))
predict(glm(Freq ~ y_bin, data = df_freq, family = "poisson"))
#
predict(glm(y_bin ~ 1, family = "binomial"))
predict(glm(Freq ~ y_bin, data = df_freq, family = "poisson"))
#
glm(y_bin ~ 1, family = "binomial") %>% summary()
glm(Freq ~ y_bin, data = df_freq, family = "poisson") %>% summary()
exp(-1.51)
1/exp(-1.51)
#
predict(glm(y_bin ~ 1, family = "binomial"))
predict(glm(Freq ~ y_bin, data = df_freq, family = "poisson"))
df_freq
predict(glm(Freq ~ y_bin, data = df_freq, family = "poisson"), type = "response")
#
predict(glm(y_bin ~ 1, family = "binomial"), type = "response")
predict(glm(Freq ~ y_bin, data = df_freq, family = "poisson"), type = "response")
#
n = 100
u = rbinom(n, 1, 0.2)
y = u*2 + rnorm(n, 0, 0.5)
#
y
#
y/(1+y)
#
ln(y)
#
log(y)
y
?plogis
#
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq))
#
n = 100
set.seed(123)
u = rbinom(n, 1, 0.2)
y = u*2 + rnorm(n, 0, 0.5)
#
log(y)
y/(1+y)
#
y_prob = plogis(y) # tr
y_bin = rbinom(n, 1, prob = y_prob)
#
#
n = 100
set.seed(123)
u = rbinom(n, 1, 0.2)
y = u*2 + rnorm(n, 0, 0.5)
#
log(y)
y/(1+y)
#
y_prob = plogis(y) # tr
y_bin = rbinom(n, 1, prob = y_prob)
#
#
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq))
xtable(  u y_bin Freq    p
1 0     0   43 0.43
2 1     0    1 0.01
3 0     1   39 0.39
4 1     1   17 0.17)
#
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq)) %>% xtable()
#
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq)) %>% xtable()
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq)) %>% mutate(log((p[4]/p[3])/(p[2]/p[1])))
#
glm(y_bin ~ u, family = "binomial")
#
glm(y_bin ~ u, family = "binomial")
#
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq)) %>% xtable()
data.frame(table(u, y_bin))
data.frame(table(u, y_bin)) %>% mutate(p = Freq/sum(Freq))
(0.17/0.39) / (0.01/0.43)
#
glm(y_bin ~ u, family = "binomial")
log((0.17/0.39) / (0.01/0.43))
log((0.17/0.39) / (0.01/0.43))
#
df_poiss = data.frame(table(u, y_bin))
df_poiss
#
glm(Freq ~ y_bin*u, data = df_poiss, family = "poisson")
glm(y_bin ~ u, family = "binomial")
glm(Freq ~ y_bin*u, data = df_poiss, family = "poisson")
#
df_poiss = data.frame(table(u, y_bin))
glm(Freq ~ y_bin*u, data = df_poiss, family = "poisson")
glm(y_bin ~ u, family = "binomial")
glm(Freq ~ y_bin*u, data = df_poiss, family = "poisson")
glm(y_bin ~ u, family = "binomial")
glm(Freq ~ y_bin*u, data = df_poiss, family = "poisson") %>% coef(exp())
glm(Freq ~ y_bin*u, data = df_poiss, family = "poisson") %>% coef(exp(.))
glm(Freq ~ y_bin*u, data = df_poiss, family = "poisson") %>% coef()
exp(glm(Freq ~ y_bin*u, data = df_poiss, family = "poisson") %>% coef())
exp(glm(y_bin ~ u, family = "binomial") %>% coef)
exp(glm(Freq ~ y_bin*u, data = df_poiss, family = "poisson") %>% coef())
exp(glm(y_bin ~ u, family = "binomial") %>% coef)
glm(Freq ~ y_bin*u, data = df_poiss, family = "poisson")
# x = 1, y = 99
# U is 39 #
f(par = 1, m = 100, px = 1, py = 1, a = 0.2, b = 0.8)
library(tidyverse)
library(ggthemes)
library(microecon)
#
# m = px * x + py + y
# y = (m - (px * x))/py
#
# objective function
# par = x
#
f = function(par = 1, m = 100, a = 0.5, b = 0.5, px = 1, py = 1){
y = (m - (px * par))/py
U = (par^a) * (y^b)
return(U)
}
#
# x = 1, y = 99
# U is 39 #
f(par = 1, m = 100, px = 1, py = 1, a = 0.2, b = 0.8)
# optimal with x = 20 #
f(par = 20, m = 100, px = 1, py = 1, a = 0.2, b = 0.8)
#
# x = 1, y = 99
# U is 39 #
f(par = 1, m = 100, px = 1, py = 1, a = 0.2, b = 0.8)
# m = px * x + py + y
# y = (m - (px * x))/py
#
# objective function
# par = x
#
f = function(par = 1, m = 100, a = 0.5, b = 0.5, px = 1, py = 1){
y = (m - (px * par))/py
U = (par^a) * (y^b)
return(U)
}
#
# x = 1, y = 99
# U is 39 #
f(par = 1, m = 100, px = 1, py = 1, a = 0.2, b = 0.8)
# optimal with x = 20 #
f(par = 20, m = 100, px = 1, py = 1, a = 0.2, b = 0.8)
#
# library(microecon)
cobbs_douglas_utility(I = 100, a = 0.2, b = 0.8, px = 1, py = 1)
#
# we are searching for the x value that maximize utility
# y is calculated automatically given the budget constraints we have
# y = (m - (px * x))/py
# perfect #
optim(par = c(1), # starting value #
fn = f,
a = 0.2,
b = 0.8,
lower = 1, # lower bound for search
upper = 100, # upper bound for search #
method = "L-BFGS-B",
control = list(fnscale = -1)) # maximize instead of minimize
#
# optim$par
# tell us that 20 is the optimal value for x
#
out = optim(par = c(1), # starting value #
fn = f,
a = 0.2,
b = 0.8,
lower = 1, # lower bound for search
upper = 100, # upper bound for search #
method = "L-BFGS-B",
control = list(fnscale = -1)) # maximize instead of minimize
#
# we can put it back into our function and retrieve the ideal value #
f(par = out$par, m = 100, px = 1, py = 1, a = 0.2, b = 0.8)
#
# we can put it back into our function and retrieve the ideal value #
f(par = out$par, m = 100, px = 1, py = 1, a = 0.2, b = 0.8)
out$par
